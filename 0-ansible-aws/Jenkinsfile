pipeline {
    agent any

    environment {
        AWS_DEFAULT_REGION = 'us-east-1'
        AWS_CREDENTIALS_ID = 'Credentials_AWS_ID' // Replace with the ID of the AWS credentials you added to Jenkins
        GIT_REPO = 'https://github.com/xmaeltht/maelkloud.git'
    }
    
    stages {
        stage('Checkout Repository') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/kay']], // Replace 'main' with the branch name you want to checkout
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [],
                    submoduleCfg: [],
                    userRemoteConfigs: [[url: "${GIT_REPO}"]]
                ])
            }
        }

        stage('Terraform Init') {
            steps {
                withCredentials([aws(credentialsId: "${AWS_CREDENTIALS_ID}", region: "${AWS_DEFAULT_REGION}")]) {
                    dir('0-ansible-aws/'){
                        sh 'terraform init'
                    }
                }   
            }
        }

        stage('Terraform Fmt, Validate, and Plan') {
            steps {
                withCredentials([aws(credentialsId: "${AWS_CREDENTIALS_ID}", region: "${AWS_DEFAULT_REGION}")]) {
                    dir('0-ansible-aws/'){
                        sh 'terraform fmt'
                        sh 'terraform validate'
                        sh 'terraform plan'
                    }
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                withCredentials([aws(credentialsId: "${AWS_CREDENTIALS_ID}", region: "${AWS_DEFAULT_REGION}")]) {
                    dir('0-ansible-aws/') {
                        sh 'terraform apply -auto-approve'
                    }
                }
            }
        }

        stage('Terraform Destroy') {
            steps {
                withCredentials([aws(credentialsId: "${AWS_CREDENTIALS_ID}", region: "${AWS_DEFAULT_REGION}")]) {
                    dir('0-ansible-aws/') {
                        sh 'terraform destroy -auto-approve'
                    }
                }
            }
        }
    }
}
